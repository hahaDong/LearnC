(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{616:function(t,s,a){"use strict";a.r(s);var n=a(18),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("讲师介绍：软件工程师，阿里云技术专家，《智能前端技术与实践》作者")]),t._v(" "),a("p",[t._v("考试科目：883 《C程序设计》（第五版）谭浩强，清华大学出版社")]),t._v(" "),a("p",[t._v("参考资料：《C程序设计（第五版）》谭浩强")])]),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("为了能编写出"),a("code",[t._v("C")]),t._v("语言程序，必须具备以下的知识和能力：")]),t._v(" "),a("ul",[a("li",[t._v("要有正确的解题思路，即学会设计算法，否则无从下手；")]),t._v(" "),a("li",[t._v("掌握"),a("code",[t._v("C")]),t._v("语言的语法，知道怎样使用"),a("code",[t._v("C")]),t._v("语言所提供的功能编写出一个完整的、正确的程序；")]),t._v(" "),a("li",[t._v("在写算法和编写程序时，要采用结构化程序设计方法，编写出结构化的程序；")])]),t._v(" "),a("h2",{attrs:{id:"_3-1-顺序程序设计举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-顺序程序设计举例"}},[t._v("#")]),t._v(" 3.1 顺序程序设计举例")]),t._v(" "),a("h4",{attrs:{id:"_1-华氏温度-➡️-摄氏温度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-华氏温度-➡️-摄氏温度"}},[t._v("#")]),t._v(" 1. 华氏温度 ➡️ 摄氏温度")]),t._v(" "),a("p",[t._v("题解：转换公式为"),a("code",[t._v("c = 5/9*(f-32)")]),t._v("，其中"),a("code",[t._v("f")]),t._v("表示华氏温度，"),a("code",[t._v("c")]),t._v("表示摄氏温度。")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请任意输入一个华氏温度："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scanf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%f"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%f对应的摄氏温度为：%f\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h4",{attrs:{id:"_2-计算存款利息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-计算存款利息"}},[t._v("#")]),t._v(" 2. 计算存款利息，")]),t._v(" "),a("p",[t._v("用p"),a("sub",[t._v("0")]),t._v("表示本金，p"),a("sub",[t._v("1")]),t._v("表示第一种方法的本息和，p"),a("sub",[t._v("2")]),t._v("表示第二种方法的本息和，p"),a("sub",[t._v("3")]),t._v("表示第三种方法的本息和。假设任意输入p"),a("sub",[t._v("0")]),t._v("，想存3年，求出其对应三种可选方法的本息和：")]),t._v(" "),a("ul",[a("li",[t._v("活期，年利率为r"),a("sub",[t._v("1")]),t._v("； ➡️ p"),a("sub",[t._v("1")]),t._v(" = p"),a("sub",[t._v("0")]),t._v("(1+r"),a("sub",[t._v("1")]),t._v(")")]),t._v(" "),a("li",[t._v("定期，年利率为r"),a("sub",[t._v("2")]),t._v("； ➡️ p"),a("sub",[t._v("2")]),t._v(" = p"),a("sub",[t._v("0")]),t._v("(1+r"),a("sub",[t._v("2")]),t._v(")")]),t._v(" "),a("li",[t._v("两次半年定期，年利率为r"),a("sub",[t._v("3")]),t._v("； ➡️ p"),a("sub",[t._v("3")]),t._v(" = p"),a("sub",[t._v("0")]),t._v("(1+r"),a("sub",[t._v("3")]),t._v("/2)*(1+r"),a("sub",[t._v("3")]),t._v("/2)")])]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" p0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" r1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0036")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("r2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0225")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("r3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0198")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入本金："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scanf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%f"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("p0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    p1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("r1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    p2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("r2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    p3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("r3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("r3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p1=%f\\np2=%f\\np3=%f\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h2",{attrs:{id:"_3-2-数据的表现形式及其计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-数据的表现形式及其计算"}},[t._v("#")]),t._v(" 3.2 数据的表现形式及其计算")]),t._v(" "),a("h3",{attrs:{id:"_3-2-1-常量和变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-常量和变量"}},[t._v("#")]),t._v(" 3.2.1 常量和变量")]),t._v(" "),a("p",[t._v("在计算机高级语言中，数据有两种表现形式："),a("strong",[t._v("常量")]),t._v("和"),a("strong",[t._v("变量")]),t._v("。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("常量")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("概念：在程序运行过程中，其值不能被改变的量称为常量；")])]),t._v(" "),a("li",[a("p",[t._v("常用常量的分类：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("整型常量：如100、600、-123等；")])]),t._v(" "),a("li",[a("p",[t._v("实型常量（包含两种表示形式）：")]),t._v(" "),a("ul",[a("li",[t._v("十进制小数形式：如123.456、0.97等；")]),t._v(" "),a("li",[t._v("指数形式：如12.34e3（表示12.34*10^3），由于在计算机输入或输出时，无法表示上角或下角，故规定以字母"),a("code",[t._v("e")]),t._v("或"),a("code",[t._v("E")]),t._v("代表以10为底的指数；")])])]),t._v(" "),a("li",[a("p",[t._v("字符常量（包含两种形式）：")]),t._v(" "),a("ul",[a("li",[t._v("普通字符：字符常量只能是一个字符，如"),a("code",[t._v("a")]),t._v("、"),a("code",[t._v("A")]),t._v("、"),a("code",[t._v("z")]),t._v("等，当在计算机存储单元中进行存储时，并非存储字符本身，而一般通过"),a("code",[t._v("ASCII")]),t._v("码进行存储；")]),t._v(" "),a("li",[t._v("转义字符：即以字符"),a("code",[t._v("\\")]),t._v("开头的字符序列，如"),a("code",[t._v("\\n")]),t._v("表示换行符，"),a("code",[t._v("\\t")]),t._v("表示将输出的位置跳到下一个"),a("code",[t._v("tab")]),t._v("位置（制表位置），一个"),a("code",[t._v("tab")]),t._v("位置为8列，常见的转义字符如表3.1所示；")])])]),t._v(" "),a("li",[a("p",[t._v('字符串常量：字符串常量是双撇号中的全部字符，但不包含双撇号本身，如"CHINA"、"Jeffery"等，'),a("strong",[t._v("单撇号只能包含一个字符，双撇号内可以包含一个字符串")]),t._v("；")])]),t._v(" "),a("li",[a("p",[t._v("符号常量：用"),a("code",[t._v("#define")]),t._v("指令，指定用一个符号名称代表一个常量，如"),a("code",[t._v("#define PI 3.1416")]),t._v("，在对程序进行编译前，预处理器先对"),a("code",[t._v("PI")]),t._v("进行处理，把所有"),a("code",[t._v("PI")]),t._v("全部置换为3.1416，在预编译后，符号常量已全部变成字面常量，使用符号常量有以下好处：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("含义清楚：在定义符号常量名时应考虑"),a("strong",[t._v("见名知意")]),t._v("，如看到"),a("code",[t._v("#define PI 3.1416")]),t._v("时从"),a("code",[t._v("PI")]),t._v("就可大致知道其表示圆周率；")])]),t._v(" "),a("li",[a("p",[t._v("在需要改变程序中多处用到的同一个常量时，能做到"),a("strong",[t._v("一改全改")]),t._v("；")])]),t._v(" "),a("li",[a("p",[t._v("变量与符号常量的区别在于符号常量不占用内存，预编译成功后，该符号就不存在了，即不能执行赋值等操作；")])])])])])])])])]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-1.png?raw=true"}})]),t._v(" "),a("p",[t._v("「注」：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("表3.1中倒数第二行是一个以八进制数表示的字符，如"),a("code",[t._v("\\101")]),t._v("代表八进制数"),a("code",[t._v("101")]),t._v("的"),a("code",[t._v("ASCII")]),t._v("字符，即"),a("code",[t._v("A")]),t._v("；")]),t._v(" "),a("ul",[a("li",[t._v("表3.1中倒数第一行是一个以十六进制数表示的"),a("code",[t._v("ASCII")]),t._v("字符，如"),a("code",[t._v("\\x41")]),t._v("代表十六进制数"),a("code",[t._v("41")]),t._v("的"),a("code",[t._v("ASCII")]),t._v("字符，即"),a("code",[t._v("A")]),t._v("；")])])])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("变量")])]),t._v(" "),a("ul",[a("li",[t._v("定义：变量代表一个有名字的、具有特定属性的一个存储单元，它用来存放数据，也就是存放变量的值，在程序运行期间，变量的值是可以改变的；")]),t._v(" "),a("li",[t._v("使用方法：先定义后使用；")]),t._v(" "),a("li",[t._v("解释：变量名实际上是以一个名字代表的一个存储地址，在对程序编译连接时由编译系统给每一个变量名分配对应的内存地址，从变量中取值，实际上是通过变量名找到相应的内存地址，从该存储单元中读取数据；")]),t._v(" "),a("li",[t._v("案例：如图3.3中"),a("code",[t._v("a")]),t._v("是变量名，3是变量"),a("code",[t._v("a")]),t._v("的值，即存放在变量"),a("code",[t._v("a")]),t._v("的内存单元中的数据；")])]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-2.png?raw=true"}})]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("常变量")])]),t._v(" "),a("p",[t._v("如"),a("code",[t._v("const int a = 3")]),t._v("表示"),a("code",[t._v("a")]),t._v("被定义为一个整型变量，指定其值为3，而且在变量存在期间其值不能改变，常变量的与常量的异同是：")]),t._v(" "),a("ul",[a("li",[t._v("常变量具有变量的基本属性，即有类型、占内存单元，仅仅不允许被改变值；")]),t._v(" "),a("li",[t._v("常变量是有名字的不变量，而常量是没有名字的不变量，有了名字就便于在程序中被引用；")])]),t._v(" "),a("p",[t._v("请看示例：")]),t._v(" "),a("ul",[a("li",[t._v("定义符号常量："),a("code",[t._v("#define Pi 3.1415926")])]),t._v(" "),a("li",[t._v("定义常变量："),a("code",[t._v("const float pi=3.1415926")])])]),t._v(" "),a("p",[t._v("符号常量"),a("code",[t._v("Pi")]),t._v("和常变量"),a("code",[t._v("pi")]),t._v("都代表3.1415926，在程序中都能使用，但二者性质不同：")]),t._v(" "),a("ul",[a("li",[t._v("定义符号常量用"),a("code",[t._v("#define")]),t._v("指令，它是预编译指令，它只是用符号常量代表一个字符串，在预编译时仅是进行字符串替换，在预编译后，符号常量就不存在了（全部置换成3.1415926），对符号常量的名字是不分配存储单元的；")]),t._v(" "),a("li",[t._v("常变量要占用存储单元，有变量值，只是该值不改变而已；")])]),t._v(" "),a("p",[t._v("综上所述，常变量具有符号常量的优点，而且使用方便，有了常变量以后，可以不必多用符号常量。")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("标识符")])]),t._v(" "),a("p",[t._v("在计算机高级语言中，用来对变量、符号常量名、函数、数组、类型等命名的有效字符序列统称为标识符，简单来说，标识符就是一个对象的名字，前面用到的变量名"),a("code",[t._v("p1")]),t._v("、"),a("code",[t._v("p2")]),t._v("、"),a("code",[t._v("c")]),t._v("、"),a("code",[t._v("f")]),t._v("、符号常量名"),a("code",[t._v("PI")]),t._v("、"),a("code",[t._v("PRICE")]),t._v("、函数名、"),a("code",[t._v("printf")]),t._v("等都是标识符，"),a("code",[t._v("C")]),t._v("语言规定标识符只能由"),a("strong",[t._v("字母")]),t._v("、"),a("strong",[t._v("数字")]),t._v("和"),a("strong",[t._v("下划线")]),t._v("3种字符组成，且第一个字符必须为字母或下划线：")]),t._v(" "),a("ul",[a("li",[t._v("合法的变量名："),a("code",[t._v("sum")]),t._v("、"),a("code",[t._v("shipudong1")]),t._v("、"),a("code",[t._v("find_max_num")]),t._v("；")]),t._v(" "),a("li",[t._v("不合法的变量名："),a("code",[t._v("K.D.Jeffery")]),t._v("、"),a("code",[t._v("¥123")]),t._v("、"),a("code",[t._v("3hahaha")]),t._v("；")])]),t._v(" "),a("p",[t._v("「注」：编译系统将大写字母和小写字母认为是两个不同的字符，因此"),a("code",[t._v("sum")]),t._v("和"),a("code",[t._v("SUM")]),t._v("是两个不同的变量名。")]),t._v(" "),a("h3",{attrs:{id:"_3-2-2-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-数据类型"}},[t._v("#")]),t._v(" 3.2.2 数据类型")]),t._v(" "),a("p",[a("code",[t._v("C")]),t._v("语言要求在定义所有的变量时都要指定变量的类型，在计算机中，数据是存放在存储单元中的，它是具体存在的，而且，存储单元是由有限的字节构成的，每一个存储单元中存放数据的范围是有限的，不可能存放"),a("strong",[t._v("无穷大")]),t._v("的数，也不能存放循环小数。")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-3.png?raw=true"}})]),t._v(" "),a("p",[t._v("所谓类型，就是对数据分配存储单元的安排，包括存储单元的长度（占多少字节）以及数据的存储形式，不同的类型分配不同的长度和存储形式。")]),t._v(" "),a("p",[t._v("其中基本类型（包括整型和浮点型）和枚举类型变量的值都是数值，统称为算术类型，算术类型和指针类型统称为纯量类型，因为其变量的值以数字来表示的，枚举类型是程序中用户定义的整数类型，数组类型和结构体类型统称为组合类型，共用体类型不属于组合类型，因为在同一时间内只有一个成员具有值，函数类型用来定义函数，描述一个函数的借口，包括函数返回值的数据类型和参数的类型。")]),t._v(" "),a("p",[t._v("不同类型的数据在内存中占用的存储单元长度是不同的，例如，Visual C++ 6.0为"),a("code",[t._v("char")]),t._v("型（字符型）数据分配1个字节，为"),a("code",[t._v("int")]),t._v("型（基本整型）数据分配4个字节，存储不同类型数据的方法也是不同的。")]),t._v(" "),a("h3",{attrs:{id:"_3-2-3-整型数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-整型数据"}},[t._v("#")]),t._v(" 3.2.3 整型数据")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("整型数据的分类")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("基本整型 "),a("code",[t._v("int")])]),t._v(" "),a("p",[t._v("编译系统分配给"),a("code",[t._v("int")]),t._v("型数据2个字节（16个二进制位）或4个字节（由具体的"),a("code",[t._v("C")]),t._v("编译系统自行决定），在存储单元中的存储方式是：用整数的补码形式存放，请看案例：")]),t._v(" "),a("p",[t._v("一个整数的补码是此数的二进制形式，如5的二进制形式是101，如果用两个字节存放一个整数，则在存储单元中数据形式如图3.5所示，如果是一个负数，则应先求出负数的补码。")]),t._v(" "),a("p",[t._v("求负数的补码的方法是：先将此数的绝对值写成二进制形式，然后对其后面所有各二进位按位取反，再加一，如图3.6所示。")])])])])]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-4.png?raw=true"}})]),t._v(" "),a("p",[t._v("在存放整数的存储单元中，最左面一位是用来表示符号的，如果该位为0，表示数值为正；如果该位为1，表示数值为负。")]),t._v(" "),a("p",[t._v("「注」：如果给整型变量分配2个字节，则存储单元中能存放的最大值为0111111111111111，第1位为0代表正数，后面15位全位1，则其取值范围位-2"),a("sup",[t._v("15")]),t._v("～（2"),a("sup",[t._v("15")]),t._v("-1）；同理若给整型变量分配4个字节，其取值范围为-2"),a("sup",[t._v("31")]),t._v("～（2"),a("sup",[t._v("31")]),t._v("-1）。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("短整型 "),a("code",[t._v("short int")])]),t._v(" "),a("p",[t._v("类型名为"),a("code",[t._v("short int")]),t._v("或"),a("code",[t._v("short")]),t._v("，"),a("code",[t._v("Visual C++ 6.0")]),t._v("分配给"),a("code",[t._v("short int")]),t._v("2个字节，存储方式与"),a("code",[t._v("int")]),t._v("型相同，其取值范围为-2"),a("sup",[t._v("15")]),t._v("～（2"),a("sup",[t._v("15")]),t._v("-1）。")])]),t._v(" "),a("li",[a("p",[t._v("长整型 "),a("code",[t._v("long int")])]),t._v(" "),a("p",[t._v("类型名为"),a("code",[t._v("long int")]),t._v("或"),a("code",[t._v("long")]),t._v("，"),a("code",[t._v("Visual C++ 6.0")]),t._v("分配给"),a("code",[t._v("long")]),t._v("4个字节，其取值范围为-2"),a("sup",[t._v("31")]),t._v("～（2"),a("sup",[t._v("31")]),t._v("-1）。")])]),t._v(" "),a("li",[a("p",[t._v("双长整型"),a("code",[t._v("long long int")])]),t._v(" "),a("p",[t._v("类型名为"),a("code",[t._v("long long int")]),t._v("或"),a("code",[t._v("long long")]),t._v("，一般分配8个字节。")]),t._v(" "),a("p",[t._v("「注」："),a("code",[t._v("C")]),t._v("标准没有具体规定各种类型数据所占用存储单元的长度，这是由编译系统自行决定的，"),a("code",[t._v("C")]),t._v("标准只要求"),a("code",[t._v("long")]),t._v("型数据长度不短于"),a("code",[t._v("int")]),t._v("型，"),a("code",[t._v("short")]),t._v("型不短于"),a("code",[t._v("int")]),t._v("型，即"),a("code",[t._v("sizeof(short) <= sizeof(int) <= sizeof(long) <= sizeof(long long)")]),t._v("。由于不同的编译系统对不同的数据类型所分配到的字节数不同，因此容易出现"),a("strong",[t._v("数据溢出")]),t._v("。")])])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("整型变量的符号属性")])]),t._v(" "),a("p",[t._v("变量值在存储单元中都是以补码形式存储的，存储单元中的第一个二进制位代表符号，整型变量的值的范围包括负数到正数。")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-5.png?raw=true"}})]),t._v(" "),a("p",[t._v("在实际应用中，有的数据的范围常常只有正值（如学号、年龄、库存量、存款额等）。为了充分利用变量的值的范围，可以将变量定义为"),a("strong",[t._v("无符号")]),t._v("类型，即在类型符号前面加上修饰符"),a("code",[t._v("unsigned")]),t._v("，表示指定该变量是"),a("strong",[t._v("无符号整数")]),t._v("类型；如果加上修饰符"),a("code",[t._v("signed")]),t._v("，则是"),a("strong",[t._v("有符号类型")]),t._v("，因此，在以上四种整型数据的基础上可以扩展为以下8种整型数据：")]),t._v(" "),a("ul",[a("li",[t._v("有符号基本整型 "),a("code",[t._v("[signed] int")])]),t._v(" "),a("li",[t._v("无符号基本整型 "),a("code",[t._v("unsigned int")])]),t._v(" "),a("li",[t._v("有符号短整型 "),a("code",[t._v("[signed] short [int]")])]),t._v(" "),a("li",[t._v("无符号短整型 "),a("code",[t._v("[unsigned] short [int]")])]),t._v(" "),a("li",[t._v("有符号长整型 "),a("code",[t._v("[signed] long [int]")])]),t._v(" "),a("li",[t._v("无符号长整型 "),a("code",[t._v("unsigned long int")])]),t._v(" "),a("li",[t._v("有符号双长整型 "),a("code",[t._v("[signed] long long [int]")])]),t._v(" "),a("li",[t._v("无符号双长整型 "),a("code",[t._v("unsigned long long [int]")])])]),t._v(" "),a("p",[t._v("「注」：如果既未指定为"),a("code",[t._v("signed")]),t._v("也未指定为"),a("code",[t._v("unsigned")]),t._v("，则默认为"),a("strong",[t._v("有符号类型")]),t._v("，如"),a("code",[t._v("signed int a")]),t._v("与"),a("code",[t._v("int a")]),t._v("等价。")]),t._v(" "),a("p",[t._v("「总结」：有符号整型数据存储单元中最高位代表符号（0为正，1为负），如果指定为"),a("code",[t._v("unsigned")]),t._v("（无符号）型，存储单元中全部二进制位都用作存放数值本身，而没有符号。无符号型变量只能存放不带符号的整数，如12345678等，不能存放负数，如-12345678。由于左面最高位不再用来表示符号，而用来表示数值，因此无符号整型变量中可以存放的正数的范围比一般整型变量中正数的范围扩大一倍，如果在程序中定义"),a("code",[t._v("a")]),t._v("和"),a("code",[t._v("b")]),t._v("两个短整型变量（占2个字节），其中"),a("code",[t._v("b")]),t._v("为无符号短整型：")]),t._v(" "),a("p",[a("code",[t._v("short a;")])]),t._v(" "),a("p",[a("code",[t._v("unsigned short b;")])]),t._v(" "),a("p",[t._v("则变量"),a("code",[t._v("a")]),t._v("的数值范围为-32768~32767，而变量"),a("code",[t._v("b")]),t._v("的数值范围为0～65535。")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-6.png?raw=true"}})]),t._v(" "),a("p",[t._v("「注」：")]),t._v(" "),a("ul",[a("li",[t._v("只有整型（包括字符型）数据可以加"),a("code",[t._v("signed")]),t._v("或"),a("code",[t._v("unsigned")]),t._v("修饰符，实型数据不能加；")]),t._v(" "),a("li",[t._v("对无符号整型数据用"),a("code",[t._v("%u")]),t._v("格式输出，"),a("code",[t._v("%u")]),t._v("表示用无符号十进制数的格式输出。")])]),t._v(" "),a("p",[t._v("在将一个变量定义为无符号整型后，不应向它赋予一个负值，否则会得到错误的结果，如：")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),t._v(" price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不能把一个负整数存储在无符号变量中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("请看演示结果：")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-7.png?raw=true"}})]),t._v(" "),a("p",[t._v("最终结果与我们期待值不符合，原因是：系统对-1先转换成补码形式，就是全部二进制位都是1，然后把它存入变量"),a("code",[t._v("price")]),t._v("中，由于"),a("code",[t._v("price")]),t._v("是无符号短整型变量，其左面第一位不代表符号，按"),a("code",[t._v("%d")]),t._v("格式输出，就是65535。")]),t._v(" "),a("h3",{attrs:{id:"_3-2-4-字符型数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-字符型数据"}},[t._v("#")]),t._v(" 3.2.4 字符型数据")]),t._v(" "),a("h4",{attrs:{id:"_1-字符与字符代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-字符与字符代码"}},[t._v("#")]),t._v(" 1. 字符与字符代码")]),t._v(" "),a("p",[t._v("字符与字符代码并不是任意写一个字符，程序都能识别的，只能使用系统的字符集中的字符，目前大多数系统采用"),a("code",[t._v("ASCII")]),t._v("字符集，各种字符集（包括"),a("code",[t._v("ASCII")]),t._v("字符集）的基本集都包括了127个字符：")]),t._v(" "),a("ul",[a("li",[t._v("字母：大写英文字母A~Z，小写英文字母a～z；")]),t._v(" "),a("li",[t._v("数字：0～9；")]),t._v(" "),a("li",[t._v("专门符号：29个（!、“、#、‘、（）、*、+、，、<等）；")]),t._v(" "),a("li",[t._v("空格符：空格、水平制表符（tab）、垂直制表符、换行、换页；")]),t._v(" "),a("li",[t._v("不能显示的字符：空字符、警告、退格、回车等；")])]),t._v(" "),a("p",[t._v("字符是以整数形式的（字符的"),a("code",[t._v("ASCII")]),t._v("代码）存放在内存单元中的，如：")]),t._v(" "),a("ul",[a("li",[t._v("大写字母"),a("code",[t._v("A")]),t._v("的"),a("code",[t._v("ASCII")]),t._v("代码是十进制数65，二进制形式是1000001；")]),t._v(" "),a("li",[t._v("小写字母"),a("code",[t._v("a")]),t._v("的"),a("code",[t._v("ASCII")]),t._v("代码是十进制数97，二进制形式是1100001；")])]),t._v(" "),a("p",[t._v("所有127个字符都可以用7个二进制位表示（"),a("code",[t._v("ASCII")]),t._v("代码为127时，二进制形式为1111111），所以在"),a("code",[t._v("C")]),t._v("中，指定用1个字节（8位）存储一个字符（所有系统都不例外），如小写字母"),a("code",[t._v("a")]),t._v("在内存中的存储情况如图3.9所示：")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-8.png?raw=true"}})]),t._v(" "),a("p",[t._v("「注」：字符"),a("code",[t._v("1")]),t._v("和整数"),a("code",[t._v("1")]),t._v("是不同的概念，字符"),a("code",[t._v("1")]),t._v("只是代表一个形状为"),a("code",[t._v("1")]),t._v("的符号，在需要时按原样输出，在内存中以"),a("code",[t._v("ASCII")]),t._v("码形式存储，占1个字节，而整数1是以整数存储方式（二进制补码方式）存储的，占2个或4个字节，如图3.10所示。")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-9.png?raw=true"}})]),t._v(" "),a("h4",{attrs:{id:"_2-字符变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-字符变量"}},[t._v("#")]),t._v(" 2. 字符变量")]),t._v(" "),a("p",[t._v("字符变量是用类型符"),a("code",[t._v("char")]),t._v("定义字符变量，如："),a("code",[t._v("char c='?'")]),t._v("，定义"),a("code",[t._v("c")]),t._v("为字符型变量并使初值为字符"),a("code",[t._v("?")]),t._v("，其"),a("code",[t._v("ASCII")]),t._v("代码为"),a("code",[t._v("63")]),t._v("，系统把整数"),a("code",[t._v("63")]),t._v("赋给变量"),a("code",[t._v("c")]),t._v("，"),a("code",[t._v("c")]),t._v("是字符变量，实质上是一个字节的整型变量，由于它常用来存放字符，所以称为字符变量，可以把0～127之间的整数赋给一个字符变量，在输出字符变量的值时，可以选择以十进制整数形式输出，或以字符形式输出，如"),a("code",[t._v('printf("%d %c\\n",c,c)')]),t._v("，其输出结果为：")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-10.png?raw=true"}})]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-11.png?raw=true"}})]),t._v(" "),a("p",[t._v("在使用有符号字符型变量时，允许存储的值为-128～127，但字符的代码不可能为负值，所以在存储字符时实际上只用到0～127这部分，如果将一个负整数赋给有符号字符型变量是合法的，但它不代表一个字符，而作为一字节整型变量存储负整数。")]),t._v(" "),a("h3",{attrs:{id:"_3-2-5-浮点型数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-5-浮点型数据"}},[t._v("#")]),t._v(" 3.2.5 浮点型数据")]),t._v(" "),a("p",[t._v("在指数形式的多种表示方式中把小数部分中"),a("strong",[t._v("小数点前的数字为0、小数点后第一位数字不为0")]),t._v("的表示形式称为"),a("strong",[t._v("规范化的指数形式")]),t._v("，如0.314159*10"),a("sup",[t._v("1")]),t._v("就是3.14159的规范化的指数形式。")]),t._v(" "),a("p",[t._v("浮点型数据是用来表示具有小数点的实数的，浮点数类型包括三种：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("float")]),t._v("型（单精度浮点型）：编译系统为每一个"),a("code",[t._v("float")]),t._v("型变量分配4个字节，数值以规范化的二进制数指数形式存放在存储单元中，在存储时，系统将实型数据分成小数部分和指数部分两个部分，分别存放，小数部分的小数点前面的数为0，如3.14159在内存中的存放形式如图所示：")])]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-12.png?raw=true"}})]),t._v(" "),a("p",[t._v("小数部分占的位数越多，数的有效数字越多，精度也就越高；指数部分占的位数越多，则能表示的数值范围越大。")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("double")]),t._v("型（双精度浮点型）")]),t._v(" "),a("p",[t._v("为了扩大能表示的数值范围，用8个字节存储一个"),a("code",[t._v("double")]),t._v("型数据，在"),a("code",[t._v("C")]),t._v("语言中进行浮点数的算数运算时，将"),a("code",[t._v("float")]),t._v("型数据都自动转换为"),a("code",[t._v("double")]),t._v("型，然后进行计算；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("long double")]),t._v("型（长双精度）")]),t._v(" "),a("p",[t._v("不同的编译系统对"),a("code",[t._v("long double")]),t._v("型的处理方法不同，分配到的字节数也不同；")])])]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-13.png?raw=true"}})]),t._v(" "),a("p",[t._v("参考链接："),a("a",{attrs:{href:"https://blog.csdn.net/wsccdsn/article/details/8180301"}},[t._v("【"),a("code",[t._v("float")]),t._v("和"),a("code",[t._v("double")]),t._v("的取值范围】")])]),t._v(" "),a("h3",{attrs:{id:"_3-2-6-怎样确定常量的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-6-怎样确定常量的类型"}},[t._v("#")]),t._v(" 3.2.6 怎样确定常量的类型")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("C")]),t._v("语言中，不仅变量有类型，常量也有类型。为什么要把常量分为不同的类型呢？在程序中出现的常量是要存放在计算机中的存储单元中的，这就必须确定分配给它多少字节，按什么方式存储。")]),t._v(" "),a("p",[t._v("怎样确定常量的类型呢？从常量的表示形式即可以判定其类型。对于字符常量很简单，只要看到由单撇号括起来的单个字符或转义字符就是字符常量；对于数值常量，不带小数点的数值是整型常量，但应注意其有效范围，凡以小数形式或指数形式出现的实数，是浮点型常量，在内存中都以指数形式存储。")]),t._v(" "),a("h3",{attrs:{id:"_3-2-7-运算符和表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-7-运算符和表达式"}},[t._v("#")]),t._v(" 3.2.7 运算符和表达式")]),t._v(" "),a("p",[t._v("几乎每一个程序都需要进行运算，对数据进行加工处理，否则程序就没有意义了。要进行运算，就需规定可以使用的运算符。"),a("code",[t._v("C")]),t._v("语言的运算符范围很宽，把除了控制语句和输入输出以外的几乎所有的基本操作都作为运算符处理，例如将赋值符 "),a("strong",[t._v("=")]),t._v(" 作为赋值运算符、方括号作为下标运算符等。")]),t._v(" "),a("h4",{attrs:{id:"_1-基本的算术运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本的算术运算符"}},[t._v("#")]),t._v(" 1. 基本的算术运算符")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-14.png?raw=true"}})]),t._v(" "),a("p",[t._v("「注」：")]),t._v(" "),a("ul",[a("li",[t._v("两个实数相除的结果是双精度实数，两个整数相除的结果为整数，如5/3==1，舍去小数部分；")]),t._v(" "),a("li",[a("strong",[t._v("%")]),t._v(" 运算符要求参加运算的运算对象为整数，结果也是整数，如8%3==2；")]),t._v(" "),a("li",[t._v("除 "),a("strong",[t._v("%")]),t._v(" 以外的运算符的操作数都可以是任何算术类型；")])]),t._v(" "),a("h4",{attrs:{id:"_2-自增、自减运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-自增、自减运算符"}},[t._v("#")]),t._v(" 2. 自增、自减运算符")]),t._v(" "),a("ul",[a("li",[t._v("++i、--i：前置自增（减），先增（减）后用；")]),t._v(" "),a("li",[t._v("i++、i--：后置自增（减），先用后增（减）；")])]),t._v(" "),a("p",[t._v("「注」：自增运算符和自减运算符只能用于变量，而不能用于常量或表达式。")]),t._v(" "),a("h4",{attrs:{id:"_3-算术表达式和运算符的优先级与结合性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-算术表达式和运算符的优先级与结合性"}},[t._v("#")]),t._v(" 3. 算术表达式和运算符的优先级与结合性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("用算数运算符和括号将运算对象（也称操作数）连接起来的、符合"),a("code",[t._v("C")]),t._v("语法规则的式子，称为**"),a("code",[t._v("C")]),t._v("算数表达式**，其中运算对象包括常量、变量和函数；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("C")]),t._v("语言除了规定了运算符的优先级外，还规定了运算符的"),a("strong",[t._v("结合性")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("左结合性：运算对象先与左面的运算符结合，如a-b+c；")]),t._v(" "),a("li",[t._v("右结合性：运算对象先与右面的运算符结合，如a=b=c；")])])])]),t._v(" "),a("h4",{attrs:{id:"_4-不同类型数据间的混合运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-不同类型数据间的混合运算"}},[t._v("#")]),t._v(" 4. 不同类型数据间的混合运算")]),t._v(" "),a("p",[t._v("如果一个运算符的两侧的数据类型不同，则先自动进行类型转换，使二者具有同一类型，然后进行运算，其转换规律为：")]),t._v(" "),a("ul",[a("li",[t._v("+、-、*、/ 运算的两个数中有一个数为"),a("code",[t._v("float")]),t._v("或"),a("code",[t._v("double")]),t._v("型，结果是"),a("code",[t._v("double")]),t._v("型，因为系统将所有"),a("code",[t._v("float")]),t._v("型数据都先转换为"),a("code",[t._v("double")]),t._v("型，然后进行运算；")]),t._v(" "),a("li",[t._v("如果"),a("code",[t._v("int")]),t._v("型与"),a("code",[t._v("float")]),t._v("或"),a("code",[t._v("double")]),t._v("型数据进行运算，先把"),a("code",[t._v("int")]),t._v("型和"),a("code",[t._v("float")]),t._v("型数据转换为"),a("code",[t._v("double")]),t._v("型，然后进行运算，结果是"),a("code",[t._v("double")]),t._v("型；")]),t._v(" "),a("li",[t._v("字符"),a("code",[t._v("char")]),t._v("型数据与整型数据进行运算，就是把字符的"),a("code",[t._v("ASCII")]),t._v("代码与整型数据进行运算，如：12+'A'，由于字符"),a("code",[t._v("A")]),t._v("的"),a("code",[t._v("ASCII")]),t._v("代码是65，相当于65+12，其值为77。")])]),t._v(" "),a("p",[t._v("请看演示案例：")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" c1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    c1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    c2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%c\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("请看演示结果：")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-15.png?raw=true"}})]),t._v(" "),a("h4",{attrs:{id:"_5-强制类型转换运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-强制类型转换运算符"}},[t._v("#")]),t._v(" 5. 强制类型转换运算符")]),t._v(" "),a("p",[t._v("一般形式为：（类型名）（表达式），如"),a("code",[t._v("(double) a")]),t._v("、"),a("code",[t._v("(int) (x+y)")]),t._v("等，在强制类型转换时，得到一个所需类型的中间数据，而原来变量的类型未发生变化，有两种类型转换：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("自动类型转换：用户不用干预，系统自动进行的类型转换，如6+3.5等；")])]),t._v(" "),a("li",[a("p",[t._v("强制类型转换：当自动类型转换不能实现目的时，可以用强制类型转换；")])])]),t._v(" "),a("h4",{attrs:{id:"_6-c运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-c运算符"}},[t._v("#")]),t._v(" 6. "),a("code",[t._v("C")]),t._v("运算符")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-16.png?raw=true"}})]),t._v(" "),a("h2",{attrs:{id:"_3-3-c语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-c语句"}},[t._v("#")]),t._v(" 3.3 "),a("code",[t._v("C")]),t._v("语句")]),t._v(" "),a("h3",{attrs:{id:"_3-3-1-c语句的作用和分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-c语句的作用和分类"}},[t._v("#")]),t._v(" 3.3.1 C语句的作用和分类")]),t._v(" "),a("p",[t._v("一个"),a("code",[t._v("C")]),t._v("程序可以由若干个源程序文件（编译时以文件模块为单位）组成，一个源文件可以由若干个函数和预处理指令以及全局变量声明部分组成，一个函数由数据声明部分和执行语句组成，语句的作用是向计算机系统发出操作指令，要求执行相应的操作，一个"),a("code",[t._v("C")]),t._v("语句经过编译后产生若干条机器指令，声明部分不是语句，它不产生机器指令，只是对有关数据的声明。")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-17.png?raw=true"}})]),t._v(" "),a("p",[a("code",[t._v("C")]),t._v("语句分为以下5类：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("控制语句（9种）")]),t._v(" "),a("ul",[a("li",[t._v("条件语句："),a("code",[t._v("if()...else...")])]),t._v(" "),a("li",[t._v("循环语句："),a("code",[t._v("for()...")]),t._v("、"),a("code",[t._v("while()...")]),t._v("、"),a("code",[t._v("do...while()")])]),t._v(" "),a("li",[t._v("结束本次循环语句："),a("code",[t._v("continue")])]),t._v(" "),a("li",[t._v("中止执行"),a("code",[t._v("switch")]),t._v("或循环语句："),a("code",[t._v("break")])]),t._v(" "),a("li",[t._v("多分支选择语句："),a("code",[t._v("switch")])]),t._v(" "),a("li",[t._v("从函数返回语句："),a("code",[t._v("return")])]),t._v(" "),a("li",[t._v("转向语句："),a("code",[t._v("goto")])])])]),t._v(" "),a("li",[a("p",[t._v("函数调用语句")]),t._v(" "),a("p",[t._v("由一个函数调用加一个分号构成；")])]),t._v(" "),a("li",[a("p",[t._v("表达式语句")]),t._v(" "),a("p",[t._v("由一个表达式加一个分号构成，如"),a("code",[t._v("i +=1")]),t._v("是表达式，不是语句，"),a("code",[t._v("i +=1;")]),t._v("是语句；")])]),t._v(" "),a("li",[a("p",[t._v("空语句")]),t._v(" "),a("p",[t._v("只有一个分号，可以用来作为流程的转向点，也可以用来作为循环语句中的循环体；")])]),t._v(" "),a("li",[a("p",[t._v("复合语句")]),t._v(" "),a("p",[t._v("用"),a("code",[t._v("{}")]),t._v("把一些语句和声明括起来成为复合语句，即语句块，复合语句中最后一个语句中最后的分号不能忽略不写。")])])]),t._v(" "),a("h3",{attrs:{id:"_3-3-2-最基本的语句-赋值语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-最基本的语句-赋值语句"}},[t._v("#")]),t._v(" 3.3.2 最基本的语句—赋值语句")]),t._v(" "),a("p",[a("code",[t._v("c")]),t._v("程序中最常用的语句是：赋值语句和输入输出语句。")]),t._v(" "),a("h5",{attrs:{id:"例3-1-给出三角形的三边长-求三角形面积。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例3-1-给出三角形的三边长-求三角形面积。"}},[t._v("#")]),t._v(" 例3.1 给出三角形的三边长，求三角形面积。")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<math.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("area"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入三角形三边长："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scanf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%f %f %f"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        area "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"三角形三边长分别为a=%1.2f b=%1.2f c=%1.2f,面积为%1.2f\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("area"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前所输入的三边长不能构成三角形，请重新输入！\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("p",[t._v("请看演示效果：")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-18.png?raw=true"}})]),t._v(" "),a("ol",[a("li",[a("p",[t._v("赋值运算符")]),t._v(" "),a("p",[t._v("赋值运算符的作用就是将一个数据赋给一个变量，如"),a("code",[t._v("a=3")]),t._v("的作用就是将常量3赋值给变量"),a("code",[t._v("a")]),t._v("；")])]),t._v(" "),a("li",[a("p",[t._v("复合的赋值运算符")]),t._v(" "),a("p",[t._v("复合的运算符可以理解为在赋值符前加上其他运算符，如"),a("code",[t._v("+=")]),t._v("、"),a("code",[t._v("-=")]),t._v("、"),a("code",[t._v("*=")]),t._v("、"),a("code",[t._v("/=")]),t._v("、"),a("code",[t._v("%=")]),t._v("；")])]),t._v(" "),a("li",[a("p",[t._v("赋值表达式")]),t._v(" "),a("p",[t._v("由赋值运算符将一个变量和一个表达式连接起来的式子称为"),a("strong",[t._v("赋值表达式")]),t._v("，其形式为"),a("strong",[t._v("变量 赋值运算符 表达式")]),t._v("，其作用是将一个表达式的值赋给一个变量，因此赋值表达式具有计算和赋值两个功能，如下所示：")]),t._v(" "),a("ul",[a("li",[t._v("a=b=c=5")]),t._v(" "),a("li",[t._v("a=5+(c=6)")]),t._v(" "),a("li",[t._v("a=(b=4)+(c=6)")]),t._v(" "),a("li",[t._v("a=(b=10)/(c=2)")])])]),t._v(" "),a("li",[a("p",[t._v("赋值过程中的类型转换")]),t._v(" "),a("p",[t._v("类型转换规则：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("整型变量 = 浮点型数据（包括单、双精度）：对浮点数取整，即舍弃小数部分，然后赋予整型变量；")])]),t._v(" "),a("li",[a("p",[t._v("单双精度变量 = 整型数据：数值不变，但以浮点数形式存储到变量中；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("float")]),t._v("变量 ="),a("code",[t._v("double")]),t._v("变量：先将双精度数转换为单精度，应注意双精度数值的大小不能超出"),a("code",[t._v("float")]),t._v("型变量的数值范围；")])]),t._v(" "),a("li",[a("p",[t._v("整型变量 = 字符型变量：将字符的"),a("code",[t._v("ASCII")]),t._v("代码赋给整型变量；")])]),t._v(" "),a("li",[a("p",[t._v("占字节少的整型变量或字符变量 = 占字节多的整型数据：只将其低字节原封不动地送到被赋值的变量，即发生"),a("strong",[t._v("截断")]),t._v("，如：")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("289")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("请看演示效果：")])])])])]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-19.png?raw=true"}})]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-20.png?raw=true"}})]),t._v(" "),a("ol",[a("li",[a("p",[t._v("赋值表达式和赋值语句")]),t._v(" "),a("p",[t._v("赋值表达式的末尾没有分号，而赋值语句的末尾必须有分号，在一个表达式中可以包含一个或多个赋值表达式，但绝不能包含赋值语句。")])]),t._v(" "),a("li",[a("p",[t._v("变量赋初值")]),t._v(" "),a("p",[t._v("「注」：如果对几个变量赋于同一个初值，应写成"),a("code",[t._v("int a=3,b=3,c=3;")]),t._v("而不是"),a("code",[t._v("int a=b=c=3;")]),t._v("。")])])]),t._v(" "),a("h2",{attrs:{id:"_3-4-数据的输入输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-数据的输入输出"}},[t._v("#")]),t._v(" 3.4 数据的输入输出")]),t._v(" "),a("h3",{attrs:{id:"_3-4-1-输入输出举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-输入输出举例"}},[t._v("#")]),t._v(" 3.4.1 输入输出举例")]),t._v(" "),a("h5",{attrs:{id:"例3-2-求ax2-bx-c-0方程的根-a-b-c由键盘输入-设b2-4ac-0。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例3-2-求ax2-bx-c-0方程的根-a-b-c由键盘输入-设b2-4ac-0。"}},[t._v("#")]),t._v(" 例3.2 求ax"),a("sup",[t._v("2")]),t._v("+bx+c=0方程的根，a,b,c由键盘输入，设b"),a("sup",[t._v("2")]),t._v("-4ac>0。")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<math.h>")]),t._v(" ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("disc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("x1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("x2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入a,b,c的值："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scanf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%lf %lf %lf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    disc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    q "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("disc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    x1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    x2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"方程%1.0fx^2+%1.0fx+%1.0f=0的根为x1=%1.2f,x2=%1.2f\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("x1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("x2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[t._v("请看演示结果：")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-21.png?raw=true"}})]),t._v(" "),a("h3",{attrs:{id:"_3-4-2-有关数据输入输出的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-有关数据输入输出的概念"}},[t._v("#")]),t._v(" 3.4.2 有关数据输入输出的概念")]),t._v(" "),a("p",[a("code",[t._v("C")]),t._v("语言本身不提供输入输出语句，输入输出操作是由"),a("code",[t._v("C")]),t._v("标准函数库中的函数来实现的，输入设备包括：键盘、磁盘、光盘、扫描仪；输出设备包括显示器、打印机等；")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-22.png?raw=true"}})]),t._v(" "),a("h3",{attrs:{id:"_3-4-3-用printf函数输出数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-3-用printf函数输出数据"}},[t._v("#")]),t._v(" 3.4.3 用"),a("code",[t._v("printf")]),t._v("函数输出数据")]),t._v(" "),a("p",[t._v("一般格式为："),a("code",[t._v("printf(格式控制，输出表列)")]),t._v("，请看参数介绍：")]),t._v(" "),a("ul",[a("li",[t._v("格式控制：用双撇号括起来的一个字符串，包括"),a("strong",[t._v("格式声明")]),t._v("和"),a("strong",[t._v("普通字符")]),t._v("两个信息：\n"),a("ul",[a("li",[t._v("格式声明：由 "),a("strong",[t._v("%")]),t._v(" 和"),a("strong",[t._v("格式字符")]),t._v("组成，其作用是将输出的数据转换成特定的格式然后输出；")]),t._v(" "),a("li",[t._v("普通字符：在输出时原样输出的字符；")])])]),t._v(" "),a("li",[t._v("输出表列：即程序需要输出的一些数据；")])]),t._v(" "),a("p",[t._v("常用的几种"),a("strong",[t._v("格式字符")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("d")]),t._v("格式符：用来输出一个有符号的十进制整数，也可指定输出数据的域宽（即所占用的列数），如"),a("code",[t._v("%5d")]),t._v("表示输出数据占5列；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("c")]),t._v("格式符：用来输出一个字符；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("s")]),t._v("格式符：用来输出一个字符串；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("f")]),t._v("格式符：用来输出实数，以小数形式输出：")]),t._v(" "),a("ul",[a("li",[t._v("基本型用 "),a("strong",[t._v("%f")]),t._v(" ：不指定输出数据的长度，由系统根据数据的实际情况决定数据所占的列数；")]),t._v(" "),a("li",[t._v("指定数据宽度和小数位数，用 "),a("strong",[t._v("%m.nf")]),t._v(" ：如 "),a("strong",[t._v("%7.2f")]),t._v(" 指定了输出的数据占7列，包括2位小数；")]),t._v(" "),a("li",[t._v("输出的数据向左对齐，用 "),a("strong",[t._v("%-m.nf")]),t._v(" ：当数据长度不超过"),a("code",[t._v("m")]),t._v("时，数据向左靠，右端补空格；")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("e")]),t._v("格式符：指定以指数形式输出实数；")])])]),t._v(" "),a("h3",{attrs:{id:"_3-4-4-用scanf函数输入数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-4-用scanf函数输入数据"}},[t._v("#")]),t._v(" 3.4.4 用"),a("code",[t._v("scanf")]),t._v("函数输入数据")]),t._v(" "),a("p",[t._v("一般格式为："),a("code",[t._v("scanf(格式控制，地址表列)")]),t._v("。")]),t._v(" "),a("p",[t._v("在输入数值数据时，如输入空格、回车、"),a("code",[t._v("Tab")]),t._v("键或遇非法字符（不属于数值的字符），则认为该数据结束。")]),t._v(" "),a("h3",{attrs:{id:"_3-4-5-字符数据的输入输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-5-字符数据的输入输出"}},[t._v("#")]),t._v(" 3.4.5 字符数据的输入输出")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("putchar(c)")]),t._v("函数输出一个字符")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'m'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("putchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("putchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("putchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("putchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])])])]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://github.com/hahaDong/img/blob/master/chap03-23.png?raw=true"}})]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("getchar(c)")]),t._v("函数输入一个字符")]),t._v(" "),a("div",{staticClass:"language-C line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("putchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("putchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("putchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("putchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])])])]),t._v(" "),a("h4",{attrs:{id:"例3-3-从键盘输入大写字母-显示屏上输出小写字母。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例3-3-从键盘输入大写字母-显示屏上输出小写字母。"}},[t._v("#")]),t._v(" 例3.3 从键盘输入大写字母，显示屏上输出小写字母。")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" c1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    c1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    c2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("putchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("putchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[a("strong",[t._v("课后题：4、5、6、7、8")])])])}),[],!1,null,null,null);s.default=e.exports}}]);