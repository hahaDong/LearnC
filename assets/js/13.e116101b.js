(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{594:function(t,s,a){"use strict";a.r(s);var n=a(16),_=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("讲师介绍：石璞东，计算机硕士，人民邮电出版社签约作者，《智能前端技术与实践》作者，百度飞桨领航团金牌团长")]),t._v(" "),a("p",[t._v("考试科目：883 《C程序设计》（第五版）谭浩强，清华大学出版社")]),t._v(" "),a("p",[t._v("参考资料：《C程序设计（第五版）》谭浩强")])]),a("h2",{attrs:{id:"_1-1-程序和指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-程序和指令"}},[t._v("#")]),t._v(" 1.1 程序和指令")]),t._v(" "),a("ul",[a("li",[t._v("程序：所谓程序，就是一组计算机能识别和执行的指令；")]),t._v(" "),a("li",[t._v("指令：一个特定的指令序列，用来完成一定的功能，每一条指令使计算机执行特定的操作，只要让计算机执行这个程序，计算机就会"),a("strong",[t._v("自动地")]),t._v("执行各条指令，有条不紊地进行工作；")])]),t._v(" "),a("h2",{attrs:{id:"_1-2-计算机语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-计算机语言"}},[t._v("#")]),t._v(" 1.2 计算机语言")]),t._v(" "),a("h3",{attrs:{id:"_1-计算机编程语言的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-计算机编程语言的分类"}},[t._v("#")]),t._v(" 1. 计算机编程语言的分类")]),t._v(" "),a("ul",[a("li",[t._v("机器语言\n"),a("ul",[a("li",[t._v("概念：计算机能直接识别和接受的二进制代码成为机器指令，机器指令的集合就是机器语言，如10010011，我们可以将其理解为人类社会发展的原始阶段；")]),t._v(" "),a("li",[t._v("操作方法：当编写完成用0和1组成的指令后，需要用纸带穿孔机以人工的方法在特制的黑色纸带上穿孔，在指定的位置上有孔代表1，无孔代表0，一个程序往往需要一卷长长的纸带，在需要运行此程序时，就将此纸带装在光电输入机上，当光电输入机从纸带读入信息时，有孔处产生一个电脉冲，指令变成电信号，让计算机执行各种操作；")]),t._v(" "),a("li",[t._v("特点：\n"),a("ul",[a("li",[t._v("优点：直接执行，速度快，资源占用少；")]),t._v(" "),a("li",[t._v("缺点：可读性、可移植性差，编程复杂；")])])])])]),t._v(" "),a("li",[t._v("汇编语言\n"),a("ul",[a("li",[t._v("概念：又称“符号语言”，即用一些英文字母和数字表示一个指令，如用"),a("code",[t._v("ADD")]),t._v("表示加法操作，用"),a("code",[t._v("SUB")]),t._v("表示减法操作，"),a("code",[t._v("LD")]),t._v("表示“传送”，显然，计算机并不能直接识别和执行符号语言的指令，需要使用一种称为汇编程序的软件，将符号语言的指令转换为机器指令；")])])]),t._v(" "),a("li",[t._v("高级语言\n"),a("ul",[a("li",[t._v("按转换方式分类：编译型语言、解释型语言；")]),t._v(" "),a("li",[t._v("按客观系统描述分类：面向过程语言、面向对象语言；")]),t._v(" "),a("li",[t._v("按编程范型分类：命令式语言、函数式语言、逻辑式语言、面向对象语言；")])])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.liuchuo.net/archives/130"}},[t._v("参考链接")])]),t._v(" "),a("h3",{attrs:{id:"_2-高级语言的不同发展阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-高级语言的不同发展阶段"}},[t._v("#")]),t._v(" 2. 高级语言的不同发展阶段")]),t._v(" "),a("ul",[a("li",[t._v("非结构化的语言：初期的语言属于非结构化的语言，编程风格比较随意，只要符合语法规则即可，没有严格的规范要求，程序中的流程可以随意跳转，人们往往追求程序执行的效率而采用了许多“小技巧”，使程序变的难以阅读和维护，早期的"),a("code",[t._v("BASIC")]),t._v("、"),a("code",[t._v("FORTRAN")]),t._v("和"),a("code",[t._v("ALGOL")]),t._v("等都属于非结构化的语言；")]),t._v(" "),a("li",[t._v("结构化语言：为了解决以上问题，提出了“结构化程序设计方法”，规定程序必须由具有良好特性的基本结构（顺序结构、分支结构、循环结构）构成，程序中的流程不允许随意跳转，程序总是由上而下顺序执行各个基本结构，"),a("code",[t._v("C")]),t._v("语言属于结构化语言；")]),t._v(" "),a("li",[t._v("面向对象语言：近年来，在处理较大规模的问题时，开始使用面向对象的语言；")])]),t._v(" "),a("h2",{attrs:{id:"_1-3-c语言介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-c语言介绍"}},[t._v("#")]),t._v(" 1.3 C语言介绍")]),t._v(" "),a("h3",{attrs:{id:"_1-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1. 概述")]),t._v(" "),a("p",[t._v("C语言是国际上广泛流行的计算机高级语言，其祖先是"),a("code",[t._v("BCPL")]),t._v("语言（"),a("code",[t._v("Basic Combined Programming Language")]),t._v("）。1970年，美国"),a("code",[t._v("AT&T")]),t._v("贝尔实验室的"),a("code",[t._v("Ken Thompson")]),t._v("以"),a("code",[t._v("BCPL")]),t._v("语言为基础，设计出了很多简单且很接近硬件的"),a("code",[t._v("B")]),t._v("语言（取"),a("code",[t._v("BCPL")]),t._v("的第一个字母），但"),a("code",[t._v("B")]),t._v("语言过于简单，功能有限；1972～1973年间，美国贝尔实验室的"),a("code",[t._v("D.M.Ritchi")]),t._v("e在"),a("code",[t._v("B")]),t._v("语言的基础上设计出了"),a("code",[t._v("C")]),t._v("语言，"),a("code",[t._v("C")]),t._v("语言既保持了"),a("code",[t._v("BCPL")]),t._v("和"),a("code",[t._v("B")]),t._v("语言的优点（精炼，接近硬件），又克服了它们的缺点（过于简单，无数据类型等），"),a("code",[t._v("C")]),t._v("语言的新特点主要表现在具有多种数据类型（如字符、数值、数组、结构体和指针等）。开发"),a("code",[t._v("C")]),t._v("语言的目的在于尽可能降低用它所写的软件对硬件平台的依赖程度，使之具有可移植性。")]),t._v(" "),a("h3",{attrs:{id:"_2-主要特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-主要特点"}},[t._v("#")]),t._v(" 2. 主要特点")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("语言简洁、紧凑，使用方便、灵活；")])]),t._v(" "),a("li",[a("p",[t._v("运算符丰富（34种）；")])]),t._v(" "),a("li",[a("p",[t._v("数据类型丰富（"),a("code",[t._v("C")]),t._v("语言提供的数据类型包括：整型、浮点型、字符型、数组类型、指针类型、结构体类型和共用体类型）；")])]),t._v(" "),a("li",[a("p",[t._v("具有结构化的控制语句（如"),a("code",[t._v("if...else")]),t._v("语句、"),a("code",[t._v("while")]),t._v("语句、"),a("code",[t._v("do...while")]),t._v("语句、"),a("code",[t._v("switch")]),t._v("语句和"),a("code",[t._v("for")]),t._v("语句）；")])]),t._v(" "),a("li",[a("p",[t._v("语法限制不太严格，程序设计自由度大（如不对数组越界进行检查）；")])]),t._v(" "),a("li",[a("p",[t._v("允许直接访问物理地址，能进行位操作，能实现汇编语言的大部分功能，可以直接对硬件进行操作；")])]),t._v(" "),a("li",[a("p",[t._v("程序可移植性好；")])]),t._v(" "),a("li",[a("p",[t._v("生成目标代码的质量高，程序执行效率高；")])])]),t._v(" "),a("h2",{attrs:{id:"_1-4-案例展示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-案例展示"}},[t._v("#")]),t._v(" 1.4 案例展示")]),t._v(" "),a("h3",{attrs:{id:"_1-let-s-say-hello-world"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-let-s-say-hello-world"}},[t._v("#")]),t._v(" 1. Let's say Hello,World!")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, World!\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("程序分析解释：")]),t._v(" "),a("ul",[a("li",[t._v("第一行：用来提供输入输出函数的相关信息，"),a("code",[t._v("stdio.h")]),t._v("是系统提供的一个文件名，即"),a("code",[t._v("standard input&output")]),t._v("的缩写，文件后缀"),a("code",[t._v(".h")]),t._v("的意思是头文件（"),a("code",[t._v("header file")]),t._v("），因为这些文件都是放在程序各文件模块的开头的，输入输出函数的相关信息已事先放在"),a("code",[t._v("stdio.h")]),t._v("文件中，现在用"),a("code",[t._v("#include")]),t._v("指令把这些信息调入供使用；")]),t._v(" "),a("li",[t._v("第二行：其中"),a("code",[t._v("main")]),t._v("是函数的名字，表示主函数，"),a("code",[t._v("main")]),t._v("前面的"),a("code",[t._v("int")]),t._v("表示此函数的类型是"),a("code",[t._v("int")]),t._v("类型，在执行主函数后会得到一个值（即函数值），其值为整型，每一个"),a("code",[t._v("C")]),t._v("语言程序都有必须有一个"),a("code",[t._v("main")]),t._v("函数，函数体由花括号括起来；")]),t._v(" "),a("li",[t._v("第三行：这是一个输出语句，"),a("code",[t._v("printf")]),t._v("是"),a("code",[t._v("C")]),t._v("编译系统提供的函数库中的输出函数，在上述代码中，"),a("code",[t._v("printf")]),t._v("函数中双撇号内的字符串"),a("code",[t._v("Hello,World!")]),t._v("按原样输出，"),a("code",[t._v("\\n")]),t._v("是换行符，即在"),a("code",[t._v("Hello,World!")]),t._v("后，显示屏上的光标位置移到下一行的开头；")]),t._v(" "),a("li",[t._v("第四行：当"),a("code",[t._v("main")]),t._v("函数执行结束前将整数"),a("code",[t._v("0")]),t._v("作为函数值，返回到调用函数处；")])]),t._v(" "),a("p",[t._v("为使程序规范和可移植性，一般建议将"),a("code",[t._v("main")]),t._v("函数指定为"),a("code",[t._v("int")]),t._v("型，并在"),a("code",[t._v("main")]),t._v("函数的最后加一个"),a("code",[t._v("return 0;")]),t._v("语句。")]),t._v(" "),a("p",[a("strong",[t._v("「注解」")]),t._v("："),a("code",[t._v("C")]),t._v("语言中的两种注解方式：")]),t._v(" "),a("ul",[a("li",[t._v("单行注释："),a("code",[t._v("//")]),t._v("；")]),t._v(" "),a("li",[t._v("块式注释："),a("code",[t._v("/**/")]),t._v("；")])]),t._v(" "),a("h3",{attrs:{id:"_2-求两数之和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-求两数之和"}},[t._v("#")]),t._v(" 2. 求两数之和")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入a、b的值："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scanf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d %d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"两数之和为：%d\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("ul",[a("li",[a("code",[t._v("printf")]),t._v("函数圆括号内有两个参数：一个是双撇号中的内容"),a("code",[t._v("两数之和为：%d\\n")]),t._v("，它是输出格式字符串，作用是输出用户希望输出的字符和输出的格式；第二个参数"),a("code",[t._v("sum")]),t._v("表示要输出的变量的值；")])]),t._v(" "),a("h3",{attrs:{id:"_3-求两数中的较大者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-求两数中的较大者"}},[t._v("#")]),t._v(" 3. 求两数中的较大者")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入a、b的值："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scanf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d %d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a和b中的较大者为:%d\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("ul",[a("li",[a("code",[t._v("scanf")]),t._v("函数：其作用是输入变量"),a("code",[t._v("a")]),t._v("和"),a("code",[t._v("b")]),t._v("的值，其参数包括两部分内容，一是双撇号中的内容，它指定输入的数据按什么格式输入，"),a("code",[t._v("%d")]),t._v("的含义是十进制整数形式；二是输入的数据准备放到哪里，即赋给哪个变量，如上述代码所示，"),a("code",[t._v("scanf")]),t._v("函数中指定的是"),a("code",[t._v("a")]),t._v("和"),a("code",[t._v("b")]),t._v("，在"),a("code",[t._v("a")]),t._v("和"),a("code",[t._v("b")]),t._v("的前面各有一个"),a("code",[t._v("&")]),t._v("，在"),a("code",[t._v("C")]),t._v("语言中是"),a("code",[t._v("&")]),t._v("地址符，"),a("code",[t._v("&a")]),t._v("的含义是变量"),a("code",[t._v("a")]),t._v("的地址，"),a("code",[t._v("&b")]),t._v("是变量"),a("code",[t._v("b")]),t._v("的地址，执行"),a("code",[t._v("scanf")]),t._v("函数，从键盘读入两个整数，送到变量"),a("code",[t._v("a")]),t._v("和"),a("code",[t._v("b")]),t._v("的地址处，然后把这两个整数分别赋给变量"),a("code",[t._v("a")]),t._v("和"),a("code",[t._v("b")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"_2-c语言程序的结构特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-c语言程序的结构特点"}},[t._v("#")]),t._v(" 2.  "),a("code",[t._v("C")]),t._v("语言程序的结构特点")]),t._v(" "),a("ul",[a("li",[t._v("一个程序由一个或多个源程序文件组成；\n"),a("ul",[a("li",[t._v("一个源程序文件包含以下3部分：\n"),a("ul",[a("li",[t._v("预处理指令")]),t._v(" "),a("li",[t._v("全局声明")]),t._v(" "),a("li",[t._v("函数定义")])])])])]),t._v(" "),a("li",[t._v("函数是"),a("code",[t._v("C")]),t._v("程序的主要组成部分；")]),t._v(" "),a("li",[t._v("一个函数主要包括两个部分；\n"),a("ul",[a("li",[t._v("函数首部："),a("code",[t._v("int max(int x, int y)")]),t._v(" "),a("ul",[a("li",[t._v("解释：第一个"),a("code",[t._v("int")]),t._v("表示函数类型，第二个"),a("code",[t._v("int")]),t._v("和第三个"),a("code",[t._v("int")]),t._v("表示参数类型，"),a("code",[t._v("max")]),t._v("表示函数名，"),a("code",[t._v("x")]),t._v("、"),a("code",[t._v("y")]),t._v("表示函数参数名；如果函数没有参数，可以写为"),a("code",[t._v("int main(void)")]),t._v("或"),a("code",[t._v("int main()")]),t._v("；")])])]),t._v(" "),a("li",[t._v("函数体：\n"),a("ul",[a("li",[t._v("声明部分：定义在本函数中所用到的变量以及对本函数所调用函数的声明；")]),t._v(" "),a("li",[t._v("执行部分：由若干个语句组成，指定在函数中所进行的操作；")])])])])]),t._v(" "),a("li",[t._v("程序总是从"),a("code",[t._v("main")]),t._v("函数开始执行的；")]),t._v(" "),a("li",[t._v("程序中对计算机的操作是由函数中的"),a("code",[t._v("C")]),t._v("语句完成的；")]),t._v(" "),a("li",[t._v("在每个数据声明和语句的最后必须有一个分号；")]),t._v(" "),a("li",[a("code",[t._v("c")]),t._v("语言本身不提供输入输出语句；")]),t._v(" "),a("li",[t._v("程序应当包含注释；")])]),t._v(" "),a("h3",{attrs:{id:"_3-如何运行c语言代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何运行c语言代码"}},[t._v("#")]),t._v(" 3. 如何运行"),a("code",[t._v("C")]),t._v("语言代码？")]),t._v(" "),a("p",[t._v("计算机不能直接识别和执行用高级语言写的指令，必须用编译程序把"),a("code",[t._v("C")]),t._v("源程序翻译成二进制形式的目标程序，然后在将该目标程序与系统的函数库以及其他目标程序连接起来，形成可执行的目标程序。")]),t._v(" "),a("p",[t._v("在编译好一个"),a("code",[t._v("C")]),t._v("源程序后，一般要经过以下几个步骤方可运行：")]),t._v(" "),a("ul",[a("li",[t._v("上机输入和编译源程序；")]),t._v(" "),a("li",[t._v("对源程序进行编译；")]),t._v(" "),a("li",[t._v("进行连接处理；")]),t._v(" "),a("li",[t._v("运行可执行程序，得到运行结果；")])]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{width:"300",height:"400",src:"https://github.com/hahaDong/img/blob/master/chap01-1.png?raw=true"}})])])}),[],!1,null,null,null);s.default=_.exports}}]);